version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      ###########
      # save test results
      ###########
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_test_results:
          path: app/build/test-results
          destination: test-results/
      ###########
      # save reports
      ###########
      - store_artifacts:
          path: app/build/reports
          destination: reports
      ###########
      # save apk
      ###########
      - run:
          name: Initial build
          command: ./gradlew clean assembleRelease --no-daemon --stacktrace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/
      ###########
      # deploy apk to fabric
      ###########
#      - deploy:
#          name: Deploy to Fabric
#          command: |
#            echo "Branch: ${CIRCLE_BRANCH} , PR: ${CIRCLE_PULL_REQUEST}"
#            if [ "${CIRCLE_BRANCH}" == "develop" -o "${CIRCLE_PULL_REQUEST}" != "" ]; then
#              ./gradlew crashlyticsUploadDistributionDevelopmentRelease --stacktrace --debug --no-daemon
#            fi
#
#            release=$(cut -c-7 <<< "${CIRCLE_BRANCH}")
#            if [ "$release" == "release"]; then
#              ./gradlew crashlyticsUploadDistributionProductionRelease --stacktrace --debug --no-daemon
#            fi