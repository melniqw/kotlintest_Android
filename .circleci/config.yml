defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-28-alpha
  environment:
    JVM_OPTS: "-Xmx1024m"
#    _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  lint:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run lint checks
          command: ./gradlew lint
      - store_artifacts:
          path: app/build/reports
          destination: app/reports


  unit-test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Unit testing
          command: ./gradlew :app:test
      - store_artifacts:
          path: app/build/reports
          destination: app/reports
      - store_test_results:
          path: app/build/test-results
          destination: app/test-results

  android-test:
    <<: *defaults
    steps:
      - checkout
#      - run:
#          name: See available android system images list
#          command: sdkmanager — list — verbose | grep system-images
      - run:
          name: Install custom system image
          command: sdkmanager "system-images;android-22;default;armeabi-v7a"
      - run:
          name: Create AVD
          command: echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on -verbose
          background: true
      - run:
          name: Wait for emulator
          command: circle-android wait-for-boot
      - run:
          name: Remove lock screen
          command: adb shell input keyevent 82
      - run:
          name: Instrumentation testing
          command: ./gradlew :app:connectedAndroidTest
      - store_artifacts:
          path: app/build/reports
          destination: app/reports
      - store_test_results:
          path: app/build/outputs/androidTest-results
          destination: app/android-test-results

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initial build
          command: ./gradlew clean assembleRelease --no-daemon --stacktrace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: app/apks

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
      - unit-test:
          requires:
            - lint
      - android-test:
          requires:
            - unit-test
      - deploy:
          requires:
            - android-test
          filters:
            branches:
              only:
                - master

#      - deploy:
#          name: Deploy to Fabric
#          command: |
#            echo "Branch: ${CIRCLE_BRANCH} , PR: ${CIRCLE_PULL_REQUEST}"
#            if [ "${CIRCLE_BRANCH}" == "develop" -o "${CIRCLE_PULL_REQUEST}" != "" ]; then
#              ./gradlew crashlyticsUploadDistributionDevelopmentRelease --stacktrace --debug --no-daemon
#            fi
#
#            release=$(cut -c-7 <<< "${CIRCLE_BRANCH}")
#            if [ "$release" == "release"]; then
#              ./gradlew crashlyticsUploadDistributionProductionRelease --stacktrace --debug --no-daemon
#            fi