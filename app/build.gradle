apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "me.melnikov.kotlintest"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def file = rootProject.file('security/signing.properties')
    def hasSigningProps = file.exists()

    signingConfigs {
        if (hasSigningProps) {
            mainRelease {
                Properties signingProp = new Properties()
                signingProp.load(file.newInputStream())
                storeFile = rootProject.file(signingProp.get('storeFile'))
                storePassword = (String) signingProp.get('storePassword')
                keyAlias = (String) signingProp.get('keyAlias')
                keyPassword = (String) signingProp.get('keyPassword')
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (hasSigningProps) {
                signingConfig signingConfigs.mainRelease
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:exifinterface:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    // lifecycle
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt "android.arch.lifecycle:compiler:1.1.1"

    // rx
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // dagger2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // todo do we need this?
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // timber
    implementation 'com.jakewharton.timber:timber:4.7.0'

    // moxy
    implementation 'com.arello-mobile:moxy-app-compat:1.5.5'
    kapt 'com.arello-mobile:moxy-compiler:1.5.5'

    // test
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation "com.android.support.test:rules:$support_test_version"
    androidTestImplementation "com.android.support.test:runner:$support_test_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
}
